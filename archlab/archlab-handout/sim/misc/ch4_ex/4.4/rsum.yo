0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp
0x00a: 803800000000000000   | 	call main
0x013: 00                   | 	halt
                            | 
                            | # Array of 4 elements
0x018:                      | 	.align 8
0x018:                      | a:
0x018: 00a000a000000000     | 	.quad	0xa000a000
0x020: 000b000b00000000     | 	.quad	0x0b000b00
0x028: c000c00000000000     | 	.quad	0x00c000c0
0x030: 0d000d0000000000     | 	.quad	0x000d000d
                            | 
0x038:                      | main:
                            | 
0x038: 30f60400000000000000 | 	irmovq	$4, %rsi # count=4
0x042: 30f71800000000000000 | 	irmovq	a, %rdi # start=a
0x04c: 805600000000000000   | 	call	rsum
0x055: 90                   | 	ret
                            | 
                            | # rsum(long a[], long count)
                            | # a in %rdi, count in %rsi
0x056:                      | rsum:
0x056: 6266                 | 	andq	%rsi, %rsi	# if (count <= 0)
0x058: 719300000000000000   | 	jle	L3
                            | 	
0x061: a03f                 | 	pushq	%rbx
0x063: 50370000000000000000 | 	mrmovq	(%rdi), %rbx
0x06d: 30f80100000000000000 | 	irmovq 	$1, %r8
0x077: 6186                 | 	subq	%r8, %rsi
0x079: 30f90800000000000000 | 	irmovq 	$8, %r9
0x083: 6097                 | 	addq	%r9, %rdi
0x085: 805600000000000000   | 	call	rsum
0x08e: 6030                 | 	addq	%rbx, %rax
0x090: b03f                 | 	popq	%rbx
0x092: 90                   | 	ret
0x093:                      | L3:
0x093: 30f00000000000000000 | 	irmovq	$0, %rax
0x09d: 90                   | 	ret
                            | 
                            | 
0x200:                      | .pos 0x200
0x200:                      | stack:
