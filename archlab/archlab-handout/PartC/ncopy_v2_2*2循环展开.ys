#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	andq %rdx,%rdx		# len <= 0?
	jle Done		# if so, goto Done:

	iaddq $-2, %rdx		# len-=2
	jl Loop1		# if so, goto Loop1:
Loop2:	
	mrmovq (%rdi), %r10		# read val from src...
	mrmovq 8(%rdi), %r11	# read val from src...
	rmmovq %r10, (%rsi)		# ...and store it to dst
  	rmmovq %r11, 8(%rsi)	# ...and store it to dst

N21:
	andq %r10, %r10			# val <= 0?
	jle N22		
	iaddq $1, %rax			# count++
N22:
	andq %r11, %r11			# val <= 0?
	jle N23
	iaddq $1, %rax			# count++
N23:
	iaddq $16, %rdi			# src+=2
	iaddq $16, %rsi			# dst+=2
	iaddq $-2, %rdx			# len-=2
	jl Loop1				# if so, goto Loop1:
	jge Loop2				# if so, goto Loop2:

Loop1:
	# length = -1 or 0
	# andq %rdx, %rdx		
	iaddq $1, %rdx			# len++
	je N1
	ret
N1:
	mrmovq (%rdi), %r10		# read val from src...
	rmmovq %r10, (%rsi)		# ...and store it to dst
	andq %r10, %r10			# val <= 0?
	jle Done
	iaddq $1, %rax		# count++
	
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
